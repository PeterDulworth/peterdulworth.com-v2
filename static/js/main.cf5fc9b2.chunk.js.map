{"version":3,"sources":["components/cards.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Page","props","pageClassName","idx","react_default","a","createElement","className","children","Pages","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","childrenWithProps","React","Children","map","c","i","cloneElement","Fragment","Component","Cards","cards_Pages","id","target","href","App","cards","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf5fc9b2.chunk.js","sourcesContent":["import React from 'react';\nimport './main.css';\n\nfunction Page(props: any) {\n    let pageClassName = (props.idx % 2 != 0 ? 'page-primary' : 'page-secondary');\n    return (\n        <div className={pageClassName}>\n            {props.children}\n        </div>\n    );\n}\n\nclass Pages extends React.Component<any, any> {\n    \n    public childrenWithProps: any;\n    \n    constructor(props: any) {\n        super(props);\n        this.childrenWithProps = React.Children.map(this.props.children, (c, i) => {\n            return React.cloneElement(c as React.ReactElement<any>, { idx: i + 1 })\n        });\n    }\n\n    render() {\n        return (\n        <React.Fragment>\n            <div className=\"carousel\">\n                {this.childrenWithProps}\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nclass Cards extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Pages>\n                <Page>\n                    <div id=\"logo-peter\">peter</div>\n                    <div id=\"logo-dulworth\">dulworth</div>\n                </Page>\n                <Page>\n                    <div id=\"education\">education</div>\n                    <div id=\"school\">rice university c/o 2020</div>\n                    <div id=\"degree-1\">b.s. computer science</div>\n                    <div id=\"degree-2\">b.a. mathematics</div>\n                </Page>\n                {/* <Page> */}\n                    {/* <div id=\"experience\">experience</div> */}\n                    {/* <div id=\"job\">two sigma - robotics mentor</div> */}\n                    {/* <div id=\"title\">comp 310 - teaching assistant</div> */}\n                    {/* <div id=\"date\">rice CS - research assistant</div> */}\n                {/* </Page> */}\n                <Page>\n                    <div id=\"skills\">skills</div>\n                    <div id=\"skill-list\">\n                        <div id=\"link\">html</div>\n                        <div id=\"link\">css</div>\n                        <div id=\"link\">sass/scss</div>\n                        <div id=\"link\">python</div>\n                        <div id=\"link\">c</div>\n                        <div id=\"link\">c++</div>\n                        <div id=\"link\">java</div>\n                        <div id=\"link\">sql</div>\n                        <div id=\"link\">react.js</div>\n                        <div id=\"link\">node.js</div>\n                        <div id=\"link\">javascript</div>\n                        <div id=\"link\">typescript</div>\n                        <div id=\"link\">php</div>\n                        <div id=\"link\">pyspark</div>\n                        <div id=\"link\">hadoop</div>\n                        <div id=\"link\">tensorflow</div>\n                        <div id=\"link\">git</div>\n                        <div id=\"link\">svn</div>\n                    </div>\n                </Page>\n                <Page>\n                    <div id=\"resume\"><a target=\"_blank\" href=\"http://www.peterdulworth.com/resume\">resume</a></div>\n                    <div id=\"click\"><a target=\"_blank\" href=\"http://www.peterdulworth.com/resume\">click</a></div>\n                </Page>\n                <Page>\n                    <div id=\"contact\">contact</div>\n                    <div id=\"email\">psd2@rice.edu</div>\n                    <div id=\"phone\">(832) 567-5653</div>\n                    <div id=\"github\"><a target=\"_blank\" href=\"https://github.com/PeterDulworth\">github</a></div>\n                    <div id=\"linkedin\"><a href=\"https://www.linkedin.com/in/peter-dulworth/\">linkedin</a></div>\n                </Page>\n            </Pages>\n        );\n    }\n}\n\nexport default Cards;","import React, { Component } from 'react';\nimport './App.css';\nimport Cards from './components/cards';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Cards></Cards>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}